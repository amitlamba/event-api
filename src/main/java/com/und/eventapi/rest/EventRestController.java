package com.und.eventapi.rest;

import com.und.eventapi.model.Event;
import com.und.eventapi.service.EventService;
import io.swagger.annotations.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;
import java.util.List;

@RestController
public class EventRestController {

    @Autowired
    private EventService eventService;

    @ApiOperation(value = "push a new event", notes = "This api call should send user event data along with user information. name of event, userid or anonymus user id, date and time, and other details ", response = Void.class, authorizations = {
            @Authorization(value = "userndot_api_key"),
            @Authorization(value = "userndot_auth", scopes = {
                    @AuthorizationScope(scope = "write_events", description = "push events generated by user in your account")
            })
    }, tags={ "events", })
    @ApiResponses(value = {
            @ApiResponse(code = 400, message = "Invalid key supplied", response = Void.class),
            @ApiResponse(code = 404, message = "not found", response = Void.class) })

    @RequestMapping(value = "/event",
            produces = { "application/json" },
            consumes = { "application/json" },
            method = RequestMethod.POST)
    public Event saveEvent(@ApiParam(value = "event object that needs to be tracked" ,required=true )  @Valid @RequestBody Event event)  {
        return eventService.saveEvent(event);
    }


    @ApiOperation(value = "push a new event", notes = "This api call should send user event data along with user information. name of event, userid or anonymus user id, date and time, and other details ", response = Void.class, authorizations = {
            @Authorization(value = "userndot_api_key"),
            @Authorization(value = "userndot_auth", scopes = {
                    @AuthorizationScope(scope = "read_events", description = "read events")
            })
    }, tags={ "events", })
    @ApiResponses(value = {
            @ApiResponse(code = 400, message = "Invalid key supplied", response = Void.class),
            @ApiResponse(code = 404, message = "not found", response = Void.class) })

    @RequestMapping(value = "/event/{name}",
            produces = { "application/json" },
            method = RequestMethod.GET)
    public  List<Event> getEvent(@PathVariable("name") String name) {
        List<Event> events = eventService.findByName(name);
        return events;

    }
}
