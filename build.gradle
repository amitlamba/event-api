buildscript {
    ext.kotlin_version = '1.1.51'
    ext.spring_boot_version = '2.0.0.M3'
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://repo.spring.io/libs-snapshot' }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version" // Required for Kotlin integration
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath('io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE')
    }
}

apply plugin: 'maven'
apply plugin: 'kotlin' // Required for Kotlin integration
apply plugin: 'java'
apply plugin: "kotlin-spring" // See https://kotlinlang.org/docs/reference/compiler-plugins.html#kotlin-spring-compiler-plugin
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "jacoco"
apply plugin: 'findbugs'


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


jacocoTestReport {
    reports {
        xml.enabled
        csv.enabled
        html.destination file("${buildDir}/reports/jacoco.Html")
    }
}
tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
        reportLevel = "low"
        ignoreFailures = true
        html.destination file("${buildDir}/reports/findBugs.Html")
    }
}

ext {
    commonsLangVersion = '3.5'
    flywayVersion = '3.2.1'
    jstlVersion = '1.2'
    taglibVersion = '1.1.2'
    javaxElVersion = '2.2.1-b04'
    bitWalkerUagentVersion = '1.20'
    kotlinVersion = '1.1.51'
    springbootVersion = '2.0.0.M5'
    aspectjVersion = '1.8.7'
    jsonPathVersion = '2.1.0'
    swaggerVersion = '2.7.0'
    springkafkaVersion = '2.0.0.RELEASE'
    pgDriverVersion = '9.4-1206-jdbc42'
    jjwtVersion = '0.9.0'
    gauvaVersion = '19.0'
    bootRedisVersion = '1.4.7.RELEASE'
    dataRedisVersion = '2.0.0.RELEASE'
    jedisVersion = '2.9.0'
    quartzVersion = '2.3.0'

}


sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/libs-snapshot' }
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    jcenter()
    mavenLocal()
}


jar {
    group = 'com.und'
    baseName = 'event-api'
    version = '0.1.0'
}



dependencies {
    testCompile(
            'org.springframework.security:spring-security-test:4.2.3.RELEASE',
    )
    testCompile group: 'com.nhaarman', name: 'mockito-kotlin', version: '1.5.0'
    testCompile 'org.mockito:mockito-core:1.+'
    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.0.0.M3') {
        exclude(module: 'commons-logging')
    }
    compile(
            //"org.springframework.boot:spring-boot-starter-data-jpa",
            //"org.springframework.boot:spring-boot-starter-data-rest",
            "org.springframework.boot:spring-boot-starter-security",
            "org.springframework.boot:spring-boot-actuator",
            "org.springframework.boot:spring-boot-starter-mobile",
            "org.springframework.boot:spring-boot-starter-data-mongodb",
            "org.aspectj:aspectjrt:$aspectjVersion",
            "org.aspectj:aspectjweaver:$aspectjVersion",
            "io.springfox:springfox-swagger2:$swaggerVersion",
            "io.springfox:springfox-swagger-ui:$swaggerVersion",
            "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion",
            "org.springframework.boot:spring-boot-devtools:$springbootVersion",
            "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version",
            "eu.bitwalker:UserAgentUtils:$bitWalkerUagentVersion"
    )
// https://mvnrepository.com/artifact/log4j/log4j
    compile group: 'log4j', name: 'log4j', version: '1.2.17'

    compile("com.und:auth-client:0.2.0-SNAPSHOT")
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.cloud:spring-cloud-config-client')
    compile('org.springframework.cloud:spring-cloud-starter-eureka')
    compile("org.springframework.kafka:spring-kafka")
    compile("org.springframework.kafka:spring-kafka-test")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.M2"
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }


}




